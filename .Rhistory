library ("swirl")
swirl()
exit
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-z-1
my_sqrt<-(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-(z/my_sqrt)
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_sqrt
my_div
getwd()
ls()
x<-9
ls()
list.files()
dir()
?list.files
list.files()
list.files(path=/users/sravan)
list.files(path="/users/sravan"")
info()
## This is a markdown file
library ("swirl")
swirl()
list.files()
args(list.files)
getwd
getwd()
old.dir<-(path="/Users/Sravan")
old.dir<-getwd()
dir.create(testdir)
dir.create()<-testdir
help()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Returns the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
files <- (Sys.glob("specdata//*.csv"))[id];
combined_data <- c()
for (file in files) {
file_data <- read.csv(file, sep = ",");
pollutant_data <- file_data[,pollutant];
pollutant_data <- pollutant_data[!is.na(pollutant_data)]
combined_data <- c(combined_data, pollutant_data)
}
return(mean(combined_data));
}
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
# The following two commands remove any previously installed H2O packages for R.
if ("package:h2o" %in% search()) { detach("package:h2o", unload=TRUE) }
if ("h2o" %in% rownames(installed.packages())) { remove.packages("h2o") }
# Next, we download, install and initialize the H2O package for R.
install.packages("h2o", repos=(c("http://s3.amazonaws.com/h2o-release/h2o/master/1757/R", getOption("repos"))))
library(h2o)
localH2O = h2o.init()
# Next, we download, install and initialize the H2O package for R.
install.packages("h2o", repos=(c("http://s3.amazonaws.com/h2o-release/h2o/master/1757/R", getOption("repos"))))
library(h2o)
localH2O = h2o.init()
install.packages("h2o", repos = (c("http://s3.amazonaws.com/h2o-release/h2o/master/1757/R",
demo(h2o.glm)
demo(h2o.glm)
B->matrix(c(7, 4, 2),nrow=3, ncol=1)
matrix(c(7, 4, 2),nrow=3, ncol=1)
X=rbind(c(1, -1/4), c(-1/4, 1))
X
solve(X)
inv(X)
## Put comments here that give an overall description of what your
X=rbind(c(1, -1/4), c(-1/4, 1))
solve(X)
X
X
solve(X)
